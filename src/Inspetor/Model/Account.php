<?php
/**
 * Account
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Inspetor Antifraud
 *
 * This is an antifraud product developed to analyzes transactions and identify frauds using trackers and analytics tools. This file must explain every request and parametes that a library must provide to a client.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: theo@useinspetor.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.8
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Account Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Account implements ModelInterface, ArrayAccess {
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Account';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account_id' => 'string',
'account_company_id' => 'string',
'account_name_hash' => 'string',
'account_email_hash' => 'string',
'account_document_hash' => 'string',
'account_address_hash' => '\Swagger\Client\Model\Address',
'account_billing_address_hash' => '\Swagger\Client\Model\Address',
'account_credit_card_info_hash' => '\Swagger\Client\Model\CreditCardInfo',
'account_create_timestamp' => 'string',
'account_update_timestamp' => 'string',
'account_phone_number_hash' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account_id' => null,
'account_company_id' => null,
'account_name_hash' => null,
'account_email_hash' => null,
'account_document_hash' => null,
'account_address_hash' => null,
'account_billing_address_hash' => null,
'account_credit_card_info_hash' => null,
'account_create_timestamp' => null,
'account_update_timestamp' => null,
'account_phone_number_hash' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'account_id',
'account_company_id' => 'account_company_id',
'account_name_hash' => 'account_name_hash',
'account_email_hash' => 'account_email_hash',
'account_document_hash' => 'account_document_hash',
'account_address_hash' => 'account_address_hash',
'account_billing_address_hash' => 'account_billing_address_hash',
'account_credit_card_info_hash' => 'account_credit_card_info_hash',
'account_create_timestamp' => 'account_create_timestamp',
'account_update_timestamp' => 'account_update_timestamp',
'account_phone_number_hash' => 'account_phone_number_hash'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
'account_company_id' => 'setAccountCompanyId',
'account_name_hash' => 'setAccountNameHash',
'account_email_hash' => 'setAccountEmailHash',
'account_document_hash' => 'setAccountDocumentHash',
'account_address_hash' => 'setAccountAddressHash',
'account_billing_address_hash' => 'setAccountBillingAddressHash',
'account_credit_card_info_hash' => 'setAccountCreditCardInfoHash',
'account_create_timestamp' => 'setAccountCreateTimestamp',
'account_update_timestamp' => 'setAccountUpdateTimestamp',
'account_phone_number_hash' => 'setAccountPhoneNumberHash'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
'account_company_id' => 'getAccountCompanyId',
'account_name_hash' => 'getAccountNameHash',
'account_email_hash' => 'getAccountEmailHash',
'account_document_hash' => 'getAccountDocumentHash',
'account_address_hash' => 'getAccountAddressHash',
'account_billing_address_hash' => 'getAccountBillingAddressHash',
'account_credit_card_info_hash' => 'getAccountCreditCardInfoHash',
'account_create_timestamp' => 'getAccountCreateTimestamp',
'account_update_timestamp' => 'getAccountUpdateTimestamp',
'account_phone_number_hash' => 'getAccountPhoneNumberHash'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['account_company_id'] = isset($data['account_company_id']) ? $data['account_company_id'] : null;
        $this->container['account_name_hash'] = isset($data['account_name_hash']) ? $data['account_name_hash'] : null;
        $this->container['account_email_hash'] = isset($data['account_email_hash']) ? $data['account_email_hash'] : null;
        $this->container['account_document_hash'] = isset($data['account_document_hash']) ? $data['account_document_hash'] : null;
        $this->container['account_address_hash'] = isset($data['account_address_hash']) ? $data['account_address_hash'] : null;
        $this->container['account_billing_address_hash'] = isset($data['account_billing_address_hash']) ? $data['account_billing_address_hash'] : null;
        $this->container['account_credit_card_info_hash'] = isset($data['account_credit_card_info_hash']) ? $data['account_credit_card_info_hash'] : null;
        $this->container['account_create_timestamp'] = isset($data['account_create_timestamp']) ? $data['account_create_timestamp'] : null;
        $this->container['account_update_timestamp'] = isset($data['account_update_timestamp']) ? $data['account_update_timestamp'] : null;
        $this->container['account_phone_number_hash'] = isset($data['account_phone_number_hash']) ? $data['account_phone_number_hash'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['account_id'] === null) {
            $invalidProperties[] = "'account_id' can't be null";
        }
        if ($this->container['account_update_timestamp'] === null) {
            $invalidProperties[] = "'account_update_timestamp' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return string
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param string $account_id account_id
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets account_company_id
     *
     * @return string
     */
    public function getAccountCompanyId()
    {
        return $this->container['account_company_id'];
    }

    /**
     * Sets account_company_id
     *
     * @param string $account_company_id account_company_id
     *
     * @return $this
     */
    public function setAccountCompanyId($account_company_id)
    {
        $this->container['account_company_id'] = $account_company_id;

        return $this;
    }

    /**
     * Gets account_name_hash
     *
     * @return string
     */
    public function getAccountNameHash()
    {
        return $this->container['account_name_hash'];
    }

    /**
     * Sets account_name_hash
     *
     * @param string $account_name_hash account_name_hash
     *
     * @return $this
     */
    public function setAccountNameHash($account_name_hash)
    {
        $this->container['account_name_hash'] = $account_name_hash;

        return $this;
    }

    /**
     * Gets account_email_hash
     *
     * @return string
     */
    public function getAccountEmailHash()
    {
        return $this->container['account_email_hash'];
    }

    /**
     * Sets account_email_hash
     *
     * @param string $account_email_hash account_email_hash
     *
     * @return $this
     */
    public function setAccountEmailHash($account_email_hash)
    {
        $this->container['account_email_hash'] = $account_email_hash;

        return $this;
    }

    /**
     * Gets account_document_hash
     *
     * @return string
     */
    public function getAccountDocumentHash()
    {
        return $this->container['account_document_hash'];
    }

    /**
     * Sets account_document_hash
     *
     * @param string $account_document_hash account_document_hash
     *
     * @return $this
     */
    public function setAccountDocumentHash($account_document_hash)
    {
        $this->container['account_document_hash'] = $account_document_hash;

        return $this;
    }

    /**
     * Gets account_address_hash
     *
     * @return \Swagger\Client\Model\Address
     */
    public function getAccountAddressHash()
    {
        return $this->container['account_address_hash'];
    }

    /**
     * Sets account_address_hash
     *
     * @param \Swagger\Client\Model\Address $account_address_hash account_address_hash
     *
     * @return $this
     */
    public function setAccountAddressHash($account_address_hash)
    {
        $this->container['account_address_hash'] = $account_address_hash;

        return $this;
    }

    /**
     * Gets account_billing_address_hash
     *
     * @return \Swagger\Client\Model\Address
     */
    public function getAccountBillingAddressHash()
    {
        return $this->container['account_billing_address_hash'];
    }

    /**
     * Sets account_billing_address_hash
     *
     * @param \Swagger\Client\Model\Address $account_billing_address_hash account_billing_address_hash
     *
     * @return $this
     */
    public function setAccountBillingAddressHash($account_billing_address_hash)
    {
        $this->container['account_billing_address_hash'] = $account_billing_address_hash;

        return $this;
    }

    /**
     * Gets account_credit_card_info_hash
     *
     * @return \Swagger\Client\Model\CreditCardInfo
     */
    public function getAccountCreditCardInfoHash()
    {
        return $this->container['account_credit_card_info_hash'];
    }

    /**
     * Sets account_credit_card_info_hash
     *
     * @param \Swagger\Client\Model\CreditCardInfo $account_credit_card_info_hash account_credit_card_info_hash
     *
     * @return $this
     */
    public function setAccountCreditCardInfoHash($account_credit_card_info_hash)
    {
        $this->container['account_credit_card_info_hash'] = $account_credit_card_info_hash;

        return $this;
    }

    /**
     * Gets account_create_timestamp
     *
     * @return string
     */
    public function getAccountCreateTimestamp()
    {
        return $this->container['account_create_timestamp'];
    }

    /**
     * Sets account_create_timestamp
     *
     * @param string $account_create_timestamp account_create_timestamp
     *
     * @return $this
     */
    public function setAccountCreateTimestamp($account_create_timestamp)
    {
        $this->container['account_create_timestamp'] = $account_create_timestamp;

        return $this;
    }

    /**
     * Gets account_update_timestamp
     *
     * @return string
     */
    public function getAccountUpdateTimestamp()
    {
        return $this->container['account_update_timestamp'];
    }

    /**
     * Sets account_update_timestamp
     *
     * @param string $account_update_timestamp account_update_timestamp
     *
     * @return $this
     */
    public function setAccountUpdateTimestamp($account_update_timestamp)
    {
        $this->container['account_update_timestamp'] = $account_update_timestamp;

        return $this;
    }

    /**
     * Gets account_phone_number_hash
     *
     * @return string
     */
    public function getAccountPhoneNumberHash()
    {
        return $this->container['account_phone_number_hash'];
    }

    /**
     * Sets account_phone_number_hash
     *
     * @param string $account_phone_number_hash account_phone_number_hash
     *
     * @return $this
     */
    public function setAccountPhoneNumberHash($account_phone_number_hash)
    {
        $this->container['account_phone_number_hash'] = $account_phone_number_hash;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
